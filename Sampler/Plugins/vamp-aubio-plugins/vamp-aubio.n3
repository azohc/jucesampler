@prefix rdfs:     <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:      <http://www.w3.org/2001/XMLSchema#> .
@prefix vamp:     <http://purl.org/ontology/vamp/> .
@prefix plugbase: <http://vamp-plugins.org/rdf/plugins/vamp-aubio#> .
@prefix owl:      <http://www.w3.org/2002/07/owl#> .
@prefix dc:       <http://purl.org/dc/elements/1.1/> .
@prefix af:       <http://purl.org/ontology/af/> .
@prefix foaf:     <http://xmlns.com/foaf/0.1/> .
@prefix doap: 	  <http://usefulinc.com/ns/doap#> .
@prefix cc:       <http://web.resource.org/cc/> .
@prefix :         <#> .

<>  a   vamp:PluginDescription ;
    foaf:maker          <http://www.vamp-plugins.org/doap.rdf#template-generator> ;
    foaf:primaryTopic   <http://vamp-plugins.org/rdf/plugins/vamp-aubio> .

:maker
    foaf:name "Paul Brossier" ;
    foaf:logo <http://aubio.org/smallrect.png> ;
    foaf:page <http://aubio.org> .

:vamp-aubio a  vamp:PluginLibrary ;
    vamp:identifier "vamp-aubio"  ; 
    dc:title "Vamp Aubio plugins" ;
    dc:description "The Vamp Aubio Plugins provide methods from Paul Brossier's aubio annotation library, including beat and tempo tracking, onset detection, pitch detection, note tracking, silence detector, and Mel-frequency cepstral coefficients." ;
    foaf:maker :maker ;
    foaf:page <http://aubio.org/vamp-aubio-plugins/> ;
    doap:download-page <http://aubio.org/vamp-aubio-plugins/download> ;
    vamp:has_source true ;
    vamp:has_binary "win32" ;
    vamp:has_binary "osx" ;
    vamp:has_binary "linux64" ;
    vamp:available_plugin plugbase:aubionotes ; 
    vamp:available_plugin plugbase:aubioonset ; 
    vamp:available_plugin plugbase:aubiopitch ; 
    vamp:available_plugin plugbase:aubiosilence ; 
    vamp:available_plugin plugbase:aubiotempo ; 
    vamp:available_plugin plugbase:aubiomfcc ;
    vamp:available_plugin plugbase:aubiomelenergy ;
    vamp:available_plugin plugbase:aubiospecdesc ;
    .

plugbase:aubionotes a   vamp:Plugin ;
    dc:title              "Aubio Note Tracker" ;
    vamp:name             "Aubio Note Tracker" ;
    vamp:category	  "Notes" ;
    dc:description        """Estimate note onset positions, pitches and durations""" ;
    foaf:maker            :maker ;
    dc:rights             """GPL""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "aubionotes" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "4" ;
    vamp:input_domain     vamp:TimeDomain ;

    vamp:parameter   plugbase:aubionotes_param_onsettype ;
    vamp:parameter   plugbase:aubionotes_param_pitchtype ;
    vamp:parameter   plugbase:aubionotes_param_minpitch ;
    vamp:parameter   plugbase:aubionotes_param_maxpitch ;
    vamp:parameter   plugbase:aubionotes_param_wraprange ;
    vamp:parameter   plugbase:aubionotes_param_avoidleaps ;
    vamp:parameter   plugbase:aubionotes_param_peakpickthreshold ;
    vamp:parameter   plugbase:aubionotes_param_silencethreshold ;
    vamp:parameter   plugbase:aubionotes_param_minioi ;

    vamp:output      plugbase:aubionotes_output_notes ;
    .
plugbase:aubionotes_param_onsettype a  vamp:QuantizedParameter ;
    vamp:identifier     "onsettype" ;
    dc:title            "Onset Detection Function Type" ;
    dc:description      """Type of onset detection function to use"""  ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       7 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   3 ;
    vamp:value_names     ( "Energy Based" "Spectral Difference" "High-Frequency Content" "Complex Domain" "Phase Deviation" "Kullback-Liebler" "Modified Kullback-Liebler" "Spectral Flux");
    .
plugbase:aubionotes_param_pitchtype a  vamp:QuantizedParameter ;
    vamp:identifier     "pitchtype" ;
    dc:title            "Pitch Detection Function Type" ;
    dc:description      """Type of pitch detection function to use"""  ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       4 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   4 ;
    vamp:value_names     ( "YIN Frequency Estimator" "Spectral Comb" "Schmitt" "Fast Harmonic Comb" "YIN with FFT");
    .
plugbase:aubionotes_param_minpitch a  vamp:QuantizedParameter ;
    vamp:identifier     "minpitch" ;
    dc:title            "Minimum Pitch" ;
    dc:description      """Lowest pitch value to look for"""  ;
    dc:format           "MIDI units" ;
    vamp:min_value       0 ;
    vamp:max_value       127 ;
    vamp:unit           "MIDI units" ;
    vamp:quantize_step   1  ;
    vamp:default_value   32 ;
    vamp:value_names     ();
    .
plugbase:aubionotes_param_maxpitch a  vamp:QuantizedParameter ;
    vamp:identifier     "maxpitch" ;
    dc:title            "Maximum Pitch" ;
    dc:description      """Highest pitch value to look for"""  ;
    dc:format           "MIDI units" ;
    vamp:min_value       0 ;
    vamp:max_value       127 ;
    vamp:unit           "MIDI units" ;
    vamp:quantize_step   1  ;
    vamp:default_value   95 ;
    vamp:value_names     ();
    .
plugbase:aubionotes_param_wraprange a  vamp:QuantizedParameter ;
    vamp:identifier     "wraprange" ;
    dc:title            "Fold Higher or Lower Notes into Range" ;
    dc:description      """Notes detected outside the range will be transposed to higher or lower octaves"""  ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       1 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   0 ;
    vamp:value_names     ();
    .
plugbase:aubionotes_param_avoidleaps a  vamp:QuantizedParameter ;
    vamp:identifier     "avoidleaps" ;
    dc:title            "Avoid Multi-Octave Jumps" ;
    dc:description      """Minimize octave jumps by transposing to the octave of the previously detected note"""  ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       1 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   0 ;
    vamp:value_names     ();
    .
plugbase:aubionotes_param_peakpickthreshold a  vamp:Parameter ;
    vamp:identifier     "peakpickthreshold" ;
    dc:title            "Peak Picker Threshold" ;
    dc:description      """Peak picking threshold, the higher the least detection"""  ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       1 ;
    vamp:unit           ""  ;
    vamp:default_value   0.3 ;
    vamp:value_names     ();
    .
plugbase:aubionotes_param_silencethreshold a  vamp:Parameter ;
    vamp:identifier     "silencethreshold" ;
    dc:title            "Silence Threshold" ;
    dc:description      """Silence threshold, the higher the least detection"""  ;
    dc:format           "dB" ;
    vamp:min_value       -120 ;
    vamp:max_value       0 ;
    vamp:unit           "dB"  ;
    vamp:default_value   -70 ;
    vamp:value_names     ();
    .
plugbase:aubionotes_param_minioi a  vamp:QuantizedParameter ;
    vamp:identifier     "minioi" ;
    dc:title            "Minimum Inter-Onset Interval" ;
    dc:description      """Time interval below which two consecutive onsets should be merged"""  ;
    dc:format           "ms" ;
    vamp:min_value       0 ;
    vamp:max_value       40 ;
    vamp:unit           "ms" ;
    vamp:quantize_step   1  ;
    vamp:default_value   4 ;
    vamp:value_names     ();
    .
plugbase:aubionotes_output_notes a  vamp:SparseOutput ;
    vamp:identifier       "notes" ;
    dc:title              "Notes" ;
    dc:description        """List of notes detected, with their frequency and velocity"""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "Hz" ;
    vamp:bin_count        2 ;
    vamp:bin_names        ( "Frequency" "Velocity");
    vamp:sample_type      vamp:VariableSampleRate ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:aubioonset a   vamp:Plugin ;
    dc:title              "Aubio Onset Detector" ;
    vamp:name             "Aubio Onset Detector" ;
    vamp:category	  "Time > Onsets" ;
    dc:description        """Estimate note onset times""" ;
    foaf:maker :maker ;
    dc:rights             """GPL""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "aubioonset" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:TimeDomain ;

    vamp:parameter   plugbase:aubioonset_param_onsettype ;
    vamp:parameter   plugbase:aubioonset_param_peakpickthreshold ;
    vamp:parameter   plugbase:aubioonset_param_silencethreshold ;
    vamp:parameter   plugbase:aubioonset_param_minioi ;

    vamp:output      plugbase:aubioonset_output_onsets ;
    vamp:output      plugbase:aubioonset_output_odf ;
    vamp:output      plugbase:aubioonset_output_todf ;
    .
plugbase:aubioonset_param_onsettype a  vamp:QuantizedParameter ;
    vamp:identifier     "onsettype" ;
    dc:title            "Onset Detection Function Type" ;
    dc:description      """Type of onset detection function to use""" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       7 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   3 ;
    vamp:value_names     ( "Energy Based" "Spectral Difference" "High-Frequency Content" "Complex Domain" "Phase Deviation" "Kullback-Liebler" "Modified Kullback-Liebler" "Spectral Flux");
    .
plugbase:aubioonset_param_peakpickthreshold a  vamp:Parameter ;
    vamp:identifier     "peakpickthreshold" ;
    dc:title            "Peak Picker Threshold" ;
    dc:description      """Threshold used for peak picking, the higher the more detections""" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       1 ;
    vamp:unit           ""  ;
    vamp:default_value   0.3 ;
    vamp:value_names     ();
    .
plugbase:aubioonset_param_silencethreshold a  vamp:Parameter ;
    vamp:identifier     "silencethreshold" ;
    dc:title            "Silence Threshold" ;
    dc:description      """Silence threshold, the higher the least detection""" ;
    dc:format           "dB" ;
    vamp:min_value       -120 ;
    vamp:max_value       0 ;
    vamp:unit           "dB"  ;
    vamp:default_value   -70 ;
    vamp:value_names     ();
    .
plugbase:aubioonset_param_minioi a  vamp:QuantizedParameter ;
    vamp:identifier     "minioi" ;
    dc:title            "Minimum Inter-Onset Interval" ;
    dc:description      """Time interval below which two consecutive onsets should be merged""" ;
    dc:format           "ms" ;
    vamp:min_value       0 ;
    vamp:max_value       40 ;
    vamp:unit           "ms" ;
    vamp:quantize_step   1  ;
    vamp:default_value   4 ;
    vamp:value_names     ();
    .
plugbase:aubioonset_output_onsets a  vamp:SparseOutput ;
    vamp:identifier       "onsets" ;
    dc:title              "Onsets" ;
    dc:description        """List of times at which a note onset was detected"""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:sample_type      vamp:VariableSampleRate ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:aubioonset_output_odf a  vamp:DenseOutput ;
    vamp:identifier       "onsets" ;
    dc:title              "Onsets" ;
    dc:description        """Output of the onset detection function"""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        1 ;
    vamp:computes_signal_type  af:Signal ;
    .
plugbase:aubioonset_output_todf a  vamp:DenseOutput ;
    vamp:identifier       "onsets" ;
    dc:title              "Onsets" ;
    dc:description        """Output of the thresholded onset detection function"""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:sample_type      vamp:VariableSampleRate ;
    .
plugbase:aubiopitch a   vamp:Plugin ;
    dc:title              "Aubio Pitch Detector" ;
    vamp:name             "Aubio Pitch Detector" ;
    vamp:category	  "Pitch" ;
    dc:description        """Track estimated note pitches""" ;
    foaf:maker :maker ;
    dc:rights             """GPL""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "aubiopitch" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "3" ;
    vamp:input_domain     vamp:TimeDomain ;

    vamp:parameter   plugbase:aubiopitch_param_pitchtype ;
    vamp:parameter   plugbase:aubiopitch_param_minfreq ;
    vamp:parameter   plugbase:aubiopitch_param_maxfreq ;
    vamp:parameter   plugbase:aubiopitch_param_wraprange ;
    vamp:parameter   plugbase:aubiopitch_param_silencethreshold ;

    vamp:output      plugbase:aubiopitch_output_frequency ;
    .
plugbase:aubiopitch_param_pitchtype a  vamp:QuantizedParameter ;
    vamp:identifier     "pitchtype" ;
    dc:title            "Pitch Detection Function Type" ;
    dc:description      """Type of pitch detection function to use""" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       4 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   4 ;
    vamp:value_names     ( "YIN Frequency Estimator" "Spectral Comb" "Schmitt" "Fast Harmonic Comb" "YIN with FFT");
    .
plugbase:aubiopitch_param_minfreq a  vamp:Parameter ;
    vamp:identifier     "minfreq" ;
    dc:title            "Minimum Fundamental Frequency" ;
    dc:description      """Lowest frequency to look for""" ;
    dc:format           "Hz" ;
    vamp:min_value       1 ;
    vamp:max_value       24000 ;
    vamp:unit           "Hz"  ;
    vamp:default_value   51.9131 ;
    vamp:value_names     ();
    .
plugbase:aubiopitch_param_maxfreq a  vamp:Parameter ;
    vamp:identifier     "maxfreq" ;
    dc:title            "Maximum Fundamental Frequency" ;
    dc:description      """Highest frequency to look for""" ;
    dc:format           "Hz" ;
    vamp:min_value       1 ;
    vamp:max_value       24000 ;
    vamp:unit           "Hz"  ;
    vamp:default_value   1975.53 ;
    vamp:value_names     ();
    .
plugbase:aubiopitch_param_wraprange a  vamp:QuantizedParameter ;
    vamp:identifier     "wraprange" ;
    dc:title            "Fold Higher or Lower Frequencies into Range" ;
    dc:description      """Frequencies detected outside the range will be transposed to higher or lower octaves""" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       1 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   0 ;
    vamp:value_names     ();
    .
plugbase:aubiopitch_param_silencethreshold a  vamp:Parameter ;
    vamp:identifier     "silencethreshold" ;
    dc:title            "Silence Threshold" ;
    dc:description      """Silence threshold, the higher the least detection"""  ;
    dc:format           "dB" ;
    vamp:min_value       -120 ;
    vamp:max_value       0 ;
    vamp:unit           "dB"  ;
    vamp:default_value   -90 ;
    vamp:value_names     ();
    .
plugbase:aubiopitch_output_frequency a  vamp:SparseOutput ;
    vamp:identifier       "frequency" ;
    dc:title              "Fundamental Frequency" ;
    dc:description        """List of detected frequencies"""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "Hz" ;
    vamp:bin_count        1 ;
    vamp:sample_type      vamp:VariableSampleRate ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:aubiosilence a   vamp:Plugin ;
    dc:title              "Aubio Silence Detector" ;
    vamp:name             "Aubio Silence Detector" ;
    vamp:category	  "Low Level Features" ;
    dc:description        """Detect levels below a certain threshold""" ;
    foaf:maker :maker ;
    dc:rights             """GPL""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "aubiosilence" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "4" ;
    vamp:input_domain     vamp:TimeDomain ;

    vamp:parameter   plugbase:aubiosilence_param_silencethreshold ;

    vamp:output      plugbase:aubiosilence_output_silent ;
    vamp:output      plugbase:aubiosilence_output_noisy ;
    vamp:output      plugbase:aubiosilence_output_silencelevel ;
    .
plugbase:aubiosilence_param_silencethreshold a  vamp:Parameter ;
    vamp:identifier     "silencethreshold" ;
    dc:title            "Silence Threshold" ;
    dc:format           "dB" ;
    vamp:min_value       -120 ;
    vamp:max_value       0 ;
    vamp:unit           "dB"  ;
    vamp:default_value   -80 ;
    vamp:value_names     ();
    .
plugbase:aubiosilence_output_silent a  vamp:SparseOutput ;
    vamp:identifier       "silent" ;
    dc:title              "Silent Regions" ;
    dc:description        """Return an interval covering each silent region"""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:sample_type      vamp:VariableSampleRate ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:aubiosilence_output_noisy a  vamp:SparseOutput ;
    vamp:identifier       "noisy" ;
    dc:title              "Non-Silent Regions" ;
    dc:description        """Return an interval covering each non-silent region"""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:sample_type      vamp:VariableSampleRate ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:aubiosilence_output_silencelevel a  vamp:SparseOutput ;
    vamp:identifier       "silencelevel" ;
    dc:title              "Silence Test" ;
    dc:description        """Return a function that switches from 1 to 0 when silence falls, and back again when it ends"""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    a                     vamp:QuantizedOutput ;
    vamp:quantize_step    1  ;
    a                 vamp:KnownExtentsOutput ;
    vamp:min_value    0  ;
    vamp:max_value    1  ;
    vamp:bin_count        1 ;
    vamp:sample_type      vamp:VariableSampleRate ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:aubiotempo a   vamp:Plugin ;
    dc:title              "Aubio Beat Tracker" ;
    vamp:name             "Aubio Beat Tracker" ;
    vamp:category	  "Time > Tempo" ;
    dc:description        """Estimate the musical tempo and track beat positions""" ;
    foaf:maker :maker ;
    dc:rights             """GPL""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "aubiotempo" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:TimeDomain ;

    vamp:parameter   plugbase:aubiotempo_param_onsettype ;
    vamp:parameter   plugbase:aubiotempo_param_peakpickthreshold ;
    vamp:parameter   plugbase:aubiotempo_param_silencethreshold ;

    vamp:output      plugbase:aubiotempo_output_beats ;
    vamp:output      plugbase:aubiotempo_output_tempo ;
    .
plugbase:aubiotempo_param_onsettype a  vamp:QuantizedParameter ;
    vamp:identifier     "onsettype" ;
    dc:title            "Onset Detection Function Type" ;
    dc:description      """Type of onset detection function to use""" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       7 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   3 ;
    vamp:value_names     ( "Energy Based" "Spectral Difference" "High-Frequency Content" "Complex Domain" "Phase Deviation" "Kullback-Liebler" "Modified Kullback-Liebler" "Spectral Flux");
    .
plugbase:aubiotempo_param_peakpickthreshold a  vamp:Parameter ;
    vamp:identifier     "peakpickthreshold" ;
    dc:title            "Peak Picker Threshold" ;
    dc:description      """Peak picking threshold, the higher the least detection""" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       1 ;
    vamp:unit           ""  ;
    vamp:default_value   0.3 ;
    vamp:value_names     ();
    .
plugbase:aubiotempo_param_silencethreshold a  vamp:Parameter ;
    vamp:identifier     "silencethreshold" ;
    dc:title            "Silence Threshold" ;
    dc:description      "Silence threshold, the higher the least detection" ;
    dc:format           "dB" ;
    vamp:min_value       -120 ;
    vamp:max_value       0 ;
    vamp:unit           "dB"  ;
    vamp:default_value   -70 ;
    vamp:value_names     ();
    .
plugbase:aubiotempo_output_beats a  vamp:SparseOutput ;
    vamp:identifier       "beats" ;
    dc:title              "Beats" ;
    dc:description        """List of times at which a beat was detected"""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:sample_type      vamp:VariableSampleRate ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:aubiotempo_output_tempo a  vamp:DenseOutput ;
    vamp:identifier       "tempo" ;
    dc:title              "Tempo" ;
    dc:description        """Overall estimated tempo"""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "bpm" ;
    vamp:bin_count        1 ;
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> 
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:aubiomfcc a   vamp:Plugin ;
    dc:title              "Aubio Mfcc Extractor" ;
    vamp:name             "Aubio Mfcc Extractor" ;
    vamp:category	  "Low Level Features" ;
    dc:description        """Extract Mel-Frequency Cepstrum Coefficients""" ;
    foaf:maker :maker ;
    dc:rights             """GPL""" ;
#   cc:license            <Place plugin license URI here and uncomment> ;
    vamp:identifier       "aubiomfcc" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "4" ;
    vamp:input_domain     vamp:TimeDomain ;

    vamp:parameter   plugbase:aubiomfcc_param_nfilters ;
    vamp:parameter   plugbase:aubiomfcc_param_ncoeffs ;

    vamp:output      plugbase:aubiomfcc_output_mfcc ;
    .
plugbase:aubiomfcc_param_nfilters a  vamp:Parameter ;
    vamp:identifier     "nfilters" ;
    dc:title            "Number of filters" ;
    dc:description      """Size of filterbank used to compute MFCCs (fixed to 40 for now)""" ;
    dc:format           "" ;
    vamp:min_value       40 ;
    vamp:max_value       40 ;
    vamp:unit           ""  ;
    vamp:default_value   40 ;
    vamp:value_names     ();
    .
plugbase:aubiomfcc_param_ncoeffs a  vamp:Parameter ;
    vamp:identifier     "ncoeffs" ;
    dc:title            "Number of coefficients" ;
    dc:description      """Number of output coefficients to compute""" ;
    dc:format           "" ;
    vamp:min_value       1 ;
    vamp:max_value       100 ;
    vamp:unit           ""  ;
    vamp:default_value   13 ;
    vamp:value_names     ();
    .
plugbase:aubiomfcc_output_mfcc a  vamp:DenseOutput ;
    vamp:identifier       "mfcc" ;
    dc:title              "Mel-Frequency Cepstrum Coefficients" ;
    dc:description        """List of detected Mel-Frequency Cepstrum Coefficients""" ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    .
plugbase:aubiomelenergy a   vamp:Plugin ;
    dc:title              "Aubio Mel-Frequency Bands Extractor" ;
    vamp:name             "Aubio Mel-Energy Bands Extractor" ;
    vamp:category	  "Low Level Features" ;
    dc:description        """Compute energy in each 40 mel-frequency bands""" ;
    foaf:maker :maker ;
    dc:rights             """GPL""" ;
#   cc:license            <Place plugin license URI here and uncomment> ;
    vamp:identifier       "aubiomelenergy" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "4" ;
    vamp:input_domain     vamp:TimeDomain ;

    vamp:parameter   plugbase:aubiomelenergy_param_nfilters ;

    vamp:output      plugbase:aubiomelenergy_output_melenergy ;
    .
plugbase:aubiomelenergy_param_nfilters a  vamp:Parameter ;
    vamp:identifier     "nfilters" ;
    dc:title            "Number of filters" ;
    dc:description      """Size of filterbank used to compute mel bands (fixed to 40 for now)""" ;
    dc:format           "" ;
    vamp:min_value       40 ;
    vamp:max_value       40 ;
    vamp:unit           ""  ;
    vamp:default_value   40 ;
    vamp:value_names     ();
    .
plugbase:aubiomelenergy_output_melenergy a  vamp:DenseOutput ;
    vamp:identifier       "melenergy" ;
    dc:title              "Mel-Frequency Cepstrum Coefficients" ;
    dc:description        """List of measured energy in each Mel-frequency bands""" ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    .
plugbase:aubiospecdesc a   vamp:Plugin ;
    dc:title              "Aubio Spectral Descriptor" ;
    vamp:name             "Aubio Spectral Descriptor" ;
    vamp:category	  "Low Level Features" ;
    dc:description        """Compute spectral description function""" ;
    foaf:maker :maker ;
    dc:rights             """GPL""" ;
#   cc:license            <Place plugin license URI here and uncomment> ;
    vamp:identifier       "aubiospecdesc" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "4" ;
    vamp:input_domain     vamp:TimeDomain ;

    vamp:parameter   plugbase:aubiospecdesc_param_specdesctype ;

    vamp:output      plugbase:aubiospecdesc_output_descriptor ;
    .
plugbase:aubioonset_param_specdesctype a  vamp:QuantizedParameter ;
    vamp:identifier     "specdesctype" ;
    dc:title            "Spectral Description Function" ;
    dc:description      """Type of onset detection function to use""" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       7 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   3 ;
    vamp:value_names     ( "Spectral Flux" "Spectral Centroid" "Spectral Spread" "Spectral Skewness" "Spectral Kurtosis" "Spectral Slope" "Spectral Decrease" "Spectral Rolloff" );
    .
plugbase:aubiospecdesc_output_descriptor a  vamp:DenseOutput ;
    vamp:identifier       "specdesc" ;
    dc:title              "Spectral Descriptor Output" ;
    dc:description        """Values computed on consecutive spectral frames""" ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        1 ;
    vamp:computes_signal_type  af:Signal ;
    .
